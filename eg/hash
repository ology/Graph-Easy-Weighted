#!/usr/bin/env perl

use strict;
use warnings;

use Graph::Easy::Weighted;

my $attr = 'rand';
my $gw = Graph::Easy::Weighted->new();
$gw->populate(
    {
        W => { attributes => { title => 'w' }, X => rand, Z => rand },
        X => { attributes => { title => 'x' }, W => rand, Y => rand },
        Y => { attributes => { title => 'y' }, W => rand, Y => rand },
        Z => { attributes => { title => 'z' }, W => rand, X => rand },
    },
    $attr,
    '%0.2f'
);

for my $vertex ( $gw->vertices ) {
    printf "%s vertex: %s %s=%s\n",
        $vertex->title, $vertex->name, $attr, $gw->get_cost($vertex, $attr);
    for my $edge ( $gw->edges ) {
        next if $edge->from->name ne $vertex->name;
        printf "\tedge to: %s %s=%s\n",
            $edge->to->name, $attr, $gw->get_cost($edge, $attr);
    }
}

print $gw->as_ascii();
